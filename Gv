import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load your data into a pandas DataFrame
data = pd.read_csv('your_data.csv')

# Convert 'date' to datetime format
data['date'] = pd.to_datetime(data['date'])

# Extract additional features for holidays and seasons
data['is_holiday'] = data['date'].isin(holiday_dates)
data['month'] = data['date'].dt.month
data['is_peak_season'] = data['month'].isin([6, 7, 8])  # Example: Assuming June, July, August are peak months

# Extract features (X) and target variable (y)
X = data[['date', 'is_holiday', 'is_peak_season']]
y = data['hits']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Create and fit the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# Plot the actual vs. predicted values
plt.plot(X_test['date'], y_test, label='Actual')
plt.plot(X_test['date'], y_pred, label='Predicted')
plt.legend()
plt.show()

#sign by uv
